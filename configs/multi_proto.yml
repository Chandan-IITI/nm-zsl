all:
  task_trainer: "multi_proto"
  hp:
    use_class_attrs: true
    # use_oracle_prototypes: true
    img_target_shape: [256, 256]
    max_num_epochs: 5
    batch_size: 10

    # head:
    #   output_dist: "normal"
    #   type: "multi_headed"
    #   num_prototypes: 1
    #   hid_dim: 512
    #   scale_value: 10.
    #   combine_strategy: "mean"
    #   embedder_hidden_layers: []
    #   use_final_activation: false

    #   senet:
    #     enabled: false
    #     reduction_dim: 16

    generative_training:
      loss_coef: 1.0
      num_protos: 10
      enabled: false
      type: "mmd"

    head:
      type: "random_embeddings"
      num_prototypes: 1
      hid_dim: 512
      fusing_type: "concat"
      after_fuse_transform_layers: [512]
      attrs_transform_layers: [312]
      use_tanh_on_top: false # To be similar to gazsl

      # How to combine the predictions from different prototypes
      aggregation_type: "average_prototypes"
      # aggregation_type: "softmax"

      noise:
        transform_layers: [100]
        same_for_each_class: false
        std: 0.0

      dae:
        enabled: false
        encoder_layers: [512, 256, 100]
        input_noise_type: "gaussian"
        input_std: 1.
        # input_dropout_p: 0.5
        codes_std: 0.1
        loss_coef: 0.0

      golden_proto:
        enabled: false
        weight: "same"

      scale:
        type: "constant"
        value: 10
        # type: "predict_from_logits"
        # layers_sizes: [200, 256, 1]

      protos_clf_loss:
        enabled: false
        loss_coef: 0.0

      push_protos_apart:
        enabled: false
        loss_coef: 0.0

    # head:
    #   output_dist: "von_mises"
    #   type: "dropout_attrs"
    #   num_prototypes: 1
    #   hid_dim: 512
    #   fusing_type: "concat"
    #   attrs_transform_layers: [312, 512]

    #   # How to combine the predictions from different prototypes
    #   aggregation_type: "aggregate_logits"

    #   dropout:
    #     p: 0.1
    #     type: "attribute_wise"

    #   scale:
    #     # type: "predict_from_logits"
    #     type: "constant"
    #     # layers_sizes: [200, 256, 1]
    #     value: 10


cub:
  hp:
    pretrained: true

awa:
  hp:
    pretrained: false

tiny_imagenet: {}
